<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <Description>Provides a set of validation and runtime checking extension methods which permits a more fluent programming style.</Description>
    <PackageTags>validation; input; integrity; check; checking</PackageTags>
    <!-- TODO: TBD: we do not have the following, for the time being: net20;portable-net45+win8+wpa81+wp8;portable-net4+sl50+win8+wpa81+wp8 -->
    <!-- TODO: TBD: Eventually it would probably be worth investigating the `portable´ targets as well, possibly... doubtful, however, concerning `net20´.  -->
    <!-- TODO: TBD: Eventually, also, netstandard2.0? netstandard2.1? -->
    <TargetFrameworks>netstandard1.0;netstandard1.3;net45;net40</TargetFrameworks>
    <!--<TargetFrameworks>netstandard1.0;netstandard1.3;net45;net40;net20;portable-net45+win8+wpa81+wp8;portable-net4+sl50+win8+wpa81+wp8</TargetFrameworks>-->
    <Version>1.0.0.3505</Version>
    <AssemblyVersion>1.0.0.3505</AssemblyVersion>
    <FileVersion>1.0.0.3505</FileVersion>
    <PackageVersion>1.0.0.3505</PackageVersion>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)' == 'Release'">
    <SignAssembly>true</SignAssembly>
    <AssemblyOriginatorKeyFile>fluent.validation.snk</AssemblyOriginatorKeyFile>
  </PropertyGroup>

  <!-- ReSharper disable UnknownProperty -->
  <PropertyGroup>
    <DefineConstants Condition="'$(TargetFramework)' == 'netstandard1.0'">$(DefineConstants);NETSTANDARD1_0</DefineConstants>
    <DefineConstants Condition="'$(TargetFramework)' == 'netstandard1.3'">$(DefineConstants);NETSTANDARD1_3</DefineConstants>
  </PropertyGroup>
  <!-- ReSharper restore UnknownProperty -->

  <!-- ReSharper disable UnknownProperty -->
  <PropertyGroup Condition="'$(Platform)' == 'AnyCPU'">
    <DocumentationFile Condition="'$(TargetFramework)' == 'netstandard1.0'">bin\$(Configuration)\netstandard1.0\Fluent.Validation.xml</DocumentationFile>
    <DocumentationFile Condition="'$(TargetFramework)' == 'netstandard1.3'">bin\$(Configuration)\netstandard1.3\Fluent.Validation.xml</DocumentationFile>
    <DocumentationFile Condition="'$(TargetFramework)' == 'net45'">bin\$(Configuration)\net45\Fluent.Validation.xml</DocumentationFile>
    <DocumentationFile Condition="'$(TargetFramework)' == 'net40'">bin\$(Configuration)\net40\Fluent.Validation.xml</DocumentationFile>
    <!--<DocumentationFile Condition="'$(TargetFramework)' == 'net20'">bin\$(Configuration)\net20\Fluent.Validation.xml</DocumentationFile>-->
    <!--<DocumentationFile Condition="'$(TargetFramework)' == 'portable-net45+win8+wpa81+wp8'">bin\$(Configuration)\portable-net45+win8+wpa81+wp8\Fluent.Validation.xml</DocumentationFile>-->
    <!--<DocumentationFile Condition="'$(TargetFramework)' == 'portable-net4+sl50+win8+wpa81+wp8'">bin\$(Configuration)\portable-net4+sl50+win8+wpa81+wp8\Fluent.Validation.xml</DocumentationFile>-->
  </PropertyGroup>
  <!-- ReSharper restore UnknownProperty -->

  <ItemGroup>
    <None Remove="Fluent.Validation.csproj.DotSettings" />
  </ItemGroup>

  <ItemGroup Condition="'$(Configuration)' == 'Debug'">
    <AssemblyAttribute Include="System.Runtime.CompilerServices.InternalsVisibleTo">
      <_Parameter1>$(MSBuildProjectName).Tests</_Parameter1>
    </AssemblyAttribute>
  </ItemGroup>

  <!-- ReSharper disable UnknownProperty -->
  <ImportGroup>
    <!-- Because Targets such as this do not seem to be imported for the multi-target use case. -->
    <Import Project="..\packages\BumpAssemblyVersions\$(BumpAssemblyVersionsVersion)\build\BumpAssemblyVersions.targets" Condition="'$(TargetFrameworks)' != '' And Exists('..\packages\BumpAssemblyVersions\$(BumpAssemblyVersionsVersion)\build\BumpAssemblyVersions.targets')" />
  </ImportGroup>
  <!-- ReSharper restore UnknownProperty -->

</Project>
